/*
 * ValidHexaedre.cpp
 *
 *  Created on: 21 nov. 2016
 *      Author: weilljc
 *
 *      Everything to compute the validity of an Hex
 *      Rapport CEA 2016/2017? "Tests de validité d'un hexaèdre"
 * EXPURGE_BEGINNING_TAG NOTE
 * EXPURGE_COMPLETION_TAG
 */

#include "Hexaedre.h"

namespace Qualif {

static double sub_matrices[8][27][27] = { { { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0.5, 0.5, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0.25, 0.5, 0.25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0 }, { 0.5, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0.25, 0.25, 0, 0.25, 0.25, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0.125,
        0.25, 0.125, 0.125, 0.25, 0.125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0 }, { 0.25, 0, 0, 0.5, 0, 0, 0.25, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0.125, 0.125, 0, 0.25,
        0.25, 0, 0.125, 0.125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0 }, { 0.0625, 0.125, 0.0625, 0.125, 0.25, 0.125, 0.0625, 0.125,
        0.0625, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0.5,
        0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0 }, { 0.25, 0.25, 0, 0, 0, 0, 0, 0, 0, 0.25, 0.25, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0.125, 0.25, 0.125, 0, 0, 0, 0, 0,
        0, 0.125, 0.25, 0.125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, {
        0.25, 0, 0, 0.25, 0, 0, 0, 0, 0, 0.25, 0, 0, 0.25, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0 }, { 0.125, 0.125, 0, 0.125, 0.125, 0, 0, 0, 0,
        0.125, 0.125, 0, 0.125, 0.125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0.0625, 0.125, 0.0625, 0.0625, 0.125, 0.0625, 0, 0, 0, 0.0625, 0.125,
        0.0625, 0.0625, 0.125, 0.0625, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, {
        0.125, 0, 0, 0.25, 0, 0, 0.125, 0, 0, 0.125, 0, 0, 0.25, 0, 0, 0.125, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0.0625, 0.0625, 0, 0.125, 0.125, 0,
        0.0625, 0.0625, 0, 0.0625, 0.0625, 0, 0.125, 0.125, 0, 0.0625, 0.0625,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0.03125, 0.0625, 0.03125, 0.0625,
        0.125, 0.0625, 0.03125, 0.0625, 0.03125, 0.03125, 0.0625, 0.03125,
        0.0625, 0.125, 0.0625, 0.03125, 0.0625, 0.03125, 0, 0, 0, 0, 0, 0, 0, 0,
        0 }, { 0.25, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0.25,
        0, 0, 0, 0, 0, 0, 0, 0 }, { 0.125, 0.125, 0, 0, 0, 0, 0, 0, 0, 0.25,
        0.25, 0, 0, 0, 0, 0, 0, 0, 0.125, 0.125, 0, 0, 0, 0, 0, 0, 0 }, {
        0.0625, 0.125, 0.0625, 0, 0, 0, 0, 0, 0, 0.125, 0.25, 0.125, 0, 0, 0, 0,
        0, 0, 0.0625, 0.125, 0.0625, 0, 0, 0, 0, 0, 0 }, { 0.125, 0, 0, 0.125,
        0, 0, 0, 0, 0, 0.25, 0, 0, 0.25, 0, 0, 0, 0, 0, 0.125, 0, 0, 0.125, 0,
        0, 0, 0, 0 }, { 0.0625, 0.0625, 0, 0.0625, 0.0625, 0, 0, 0, 0, 0.125,
        0.125, 0, 0.125, 0.125, 0, 0, 0, 0, 0.0625, 0.0625, 0, 0.0625, 0.0625,
        0, 0, 0, 0 }, { 0.03125, 0.0625, 0.03125, 0.03125, 0.0625, 0.03125, 0,
        0, 0, 0.0625, 0.125, 0.0625, 0.0625, 0.125, 0.0625, 0, 0, 0, 0.03125,
        0.0625, 0.03125, 0.03125, 0.0625, 0.03125, 0, 0, 0 }, { 0.0625, 0, 0,
        0.125, 0, 0, 0.0625, 0, 0, 0.125, 0, 0, 0.25, 0, 0, 0.125, 0, 0, 0.0625,
        0, 0, 0.125, 0, 0, 0.0625, 0, 0 }, { 0.03125, 0.03125, 0, 0.0625,
        0.0625, 0, 0.03125, 0.03125, 0, 0.0625, 0.0625, 0, 0.125, 0.125, 0,
        0.0625, 0.0625, 0, 0.03125, 0.03125, 0, 0.0625, 0.0625, 0, 0.03125,
        0.03125, 0 }, { 0.015625, 0.03125, 0.015625, 0.03125, 0.0625, 0.03125,
        0.015625, 0.03125, 0.015625, 0.03125, 0.0625, 0.03125, 0.0625, 0.125,
        0.0625, 0.03125, 0.0625, 0.03125, 0.015625, 0.03125, 0.015625, 0.03125,
        0.0625, 0.03125, 0.015625, 0.03125, 0.015625 } },

{ { 0.25, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0.25, 0, 0, 0, 0,
    0, 0, 0, 0 }, { 0.125, 0.125, 0, 0, 0, 0, 0, 0, 0, 0.25, 0.25, 0, 0, 0, 0,
    0, 0, 0, 0.125, 0.125, 0, 0, 0, 0, 0, 0, 0 }, { 0.0625, 0.125, 0.0625, 0, 0,
    0, 0, 0, 0, 0.125, 0.25, 0.125, 0, 0, 0, 0, 0, 0, 0.0625, 0.125, 0.0625, 0,
    0, 0, 0, 0, 0 }, { 0.125, 0, 0, 0.125, 0, 0, 0, 0, 0, 0.25, 0, 0, 0.25, 0,
    0, 0, 0, 0, 0.125, 0, 0, 0.125, 0, 0, 0, 0, 0 }, { 0.0625, 0.0625, 0,
    0.0625, 0.0625, 0, 0, 0, 0, 0.125, 0.125, 0, 0.125, 0.125, 0, 0, 0, 0,
    0.0625, 0.0625, 0, 0.0625, 0.0625, 0, 0, 0, 0 },
    { 0.03125, 0.0625, 0.03125, 0.03125, 0.0625, 0.03125, 0, 0, 0, 0.0625,
        0.125, 0.0625, 0.0625, 0.125, 0.0625, 0, 0, 0, 0.03125, 0.0625, 0.03125,
        0.03125, 0.0625, 0.03125, 0, 0, 0 }, { 0.0625, 0, 0, 0.125, 0, 0,
        0.0625, 0, 0, 0.125, 0, 0, 0.25, 0, 0, 0.125, 0, 0, 0.0625, 0, 0, 0.125,
        0, 0, 0.0625, 0, 0 }, { 0.03125, 0.03125, 0, 0.0625, 0.0625, 0, 0.03125,
        0.03125, 0, 0.0625, 0.0625, 0, 0.125, 0.125, 0, 0.0625, 0.0625, 0,
        0.03125, 0.03125, 0, 0.0625, 0.0625, 0, 0.03125, 0.03125, 0 }, {
        0.015625, 0.03125, 0.015625, 0.03125, 0.0625, 0.03125, 0.015625,
        0.03125, 0.015625, 0.03125, 0.0625, 0.03125, 0.0625, 0.125, 0.0625,
        0.03125, 0.0625, 0.03125, 0.015625, 0.03125, 0.015625, 0.03125, 0.0625,
        0.03125, 0.015625, 0.03125, 0.015625 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0.25, 0.25, 0, 0, 0, 0, 0, 0, 0, 0.25, 0.25, 0, 0, 0,
        0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.125, 0.25, 0.125, 0, 0, 0,
        0, 0, 0, 0.125, 0.25, 0.125, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.25, 0, 0, 0.25, 0, 0, 0, 0, 0, 0.25, 0, 0,
        0.25, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.125, 0.125, 0,
        0.125, 0.125, 0, 0, 0, 0, 0.125, 0.125, 0, 0.125, 0.125, 0, 0, 0, 0 }, {
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0625, 0.125, 0.0625, 0.0625, 0.125, 0.0625,
        0, 0, 0, 0.0625, 0.125, 0.0625, 0.0625, 0.125, 0.0625, 0, 0, 0 }, { 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0.125, 0, 0, 0.25, 0, 0, 0.125, 0, 0, 0.125, 0,
        0, 0.25, 0, 0, 0.125, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0625,
        0.0625, 0, 0.125, 0.125, 0, 0.0625, 0.0625, 0, 0.0625, 0.0625, 0, 0.125,
        0.125, 0, 0.0625, 0.0625, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.03125,
        0.0625, 0.03125, 0.0625, 0.125, 0.0625, 0.03125, 0.0625, 0.03125,
        0.03125, 0.0625, 0.03125, 0.0625, 0.125, 0.0625, 0.03125, 0.0625,
        0.03125 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0.25, 0.5, 0.25, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0, 0, 0.5, 0, 0, 0, 0,
        0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.25, 0.25,
        0, 0.25, 0.25, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0.125, 0.25, 0.125, 0.125, 0.25, 0.125, 0, 0, 0 }, { 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.25, 0, 0, 0.5, 0, 0,
        0.25, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0.125, 0.125, 0, 0.25, 0.25, 0, 0.125, 0.125, 0 }, { 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0625, 0.125, 0.0625, 0.125, 0.25,
        0.125, 0.0625, 0.125, 0.0625 } },

{ { 0.25, 0, 0, 0.5, 0, 0, 0.25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0 }, { 0.125, 0.125, 0, 0.25, 0.25, 0, 0.125, 0.125, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0.0625, 0.125, 0.0625, 0.125,
    0.25, 0.125, 0.0625, 0.125, 0.0625, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0 }, { 0, 0, 0, 0.5, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0.25, 0.25, 0, 0.25, 0.25, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0.125, 0.25,
    0.125, 0.125, 0.25, 0.125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0 }, { 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0.25, 0.5, 0.25, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0.125, 0, 0, 0.25, 0, 0, 0.125, 0, 0, 0.125, 0, 0, 0.25, 0, 0, 0.125, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0.0625, 0.0625, 0, 0.125, 0.125, 0,
        0.0625, 0.0625, 0, 0.0625, 0.0625, 0, 0.125, 0.125, 0, 0.0625, 0.0625,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0.03125, 0.0625, 0.03125, 0.0625,
        0.125, 0.0625, 0.03125, 0.0625, 0.03125, 0.03125, 0.0625, 0.03125,
        0.0625, 0.125, 0.0625, 0.03125, 0.0625, 0.03125, 0, 0, 0, 0, 0, 0, 0, 0,
        0 }, { 0, 0, 0, 0.25, 0, 0, 0.25, 0, 0, 0, 0, 0, 0.25, 0, 0, 0.25, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0.125, 0.125, 0, 0.125, 0.125, 0, 0, 0, 0, 0.125, 0.125, 0,
        0.125, 0.125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0.0625, 0.125,
        0.0625, 0.0625, 0.125, 0.0625, 0, 0, 0, 0.0625, 0.125, 0.0625, 0.0625,
        0.125, 0.0625, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0.5, 0,
        0, 0, 0, 0, 0, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0,
        0, 0, 0, 0.25, 0.25, 0, 0, 0, 0, 0, 0, 0, 0.25, 0.25, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0.125, 0.25, 0.125, 0, 0, 0, 0, 0, 0,
        0.125, 0.25, 0.125, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0.0625, 0, 0, 0.125,
        0, 0, 0.0625, 0, 0, 0.125, 0, 0, 0.25, 0, 0, 0.125, 0, 0, 0.0625, 0, 0,
        0.125, 0, 0, 0.0625, 0, 0 }, { 0.03125, 0.03125, 0, 0.0625, 0.0625, 0,
        0.03125, 0.03125, 0, 0.0625, 0.0625, 0, 0.125, 0.125, 0, 0.0625, 0.0625,
        0, 0.03125, 0.03125, 0, 0.0625, 0.0625, 0, 0.03125, 0.03125, 0 }, {
        0.015625, 0.03125, 0.015625, 0.03125, 0.0625, 0.03125, 0.015625,
        0.03125, 0.015625, 0.03125, 0.0625, 0.03125, 0.0625, 0.125, 0.0625,
        0.03125, 0.0625, 0.03125, 0.015625, 0.03125, 0.015625, 0.03125, 0.0625,
        0.03125, 0.015625, 0.03125, 0.015625 },
    { 0, 0, 0, 0.125, 0, 0, 0.125, 0, 0, 0, 0, 0, 0.25, 0, 0, 0.25, 0, 0, 0, 0,
        0, 0.125, 0, 0, 0.125, 0, 0 }, { 0, 0, 0, 0.0625, 0.0625, 0, 0.0625,
        0.0625, 0, 0, 0, 0, 0.125, 0.125, 0, 0.125, 0.125, 0, 0, 0, 0, 0.0625,
        0.0625, 0, 0.0625, 0.0625, 0 }, { 0, 0, 0, 0.03125, 0.0625, 0.03125,
        0.03125, 0.0625, 0.03125, 0, 0, 0, 0.0625, 0.125, 0.0625, 0.0625, 0.125,
        0.0625, 0, 0, 0, 0.03125, 0.0625, 0.03125, 0.03125, 0.0625, 0.03125 }, {
        0, 0, 0, 0, 0, 0, 0.25, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0, 0, 0, 0, 0, 0,
        0, 0, 0.25, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0.125, 0.125, 0, 0, 0, 0, 0, 0,
        0, 0.25, 0.25, 0, 0, 0, 0, 0, 0, 0, 0.125, 0.125, 0 }, { 0, 0, 0, 0, 0,
        0, 0.0625, 0.125, 0.0625, 0, 0, 0, 0, 0, 0, 0.125, 0.25, 0.125, 0, 0, 0,
        0, 0, 0, 0.0625, 0.125, 0.0625 } },

{ { 0.25, 0.5, 0.25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0 }, { 0, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0.125, 0.25, 0.125, 0.125, 0.25, 0.125,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0.25,
    0.25, 0, 0.25, 0.25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0 }, { 0, 0, 0.5, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0 }, { 0.0625, 0.125, 0.0625, 0.125, 0.25, 0.125, 0.0625,
    0.125, 0.0625, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0,
    0.125, 0.125, 0, 0.25, 0.25, 0, 0.125, 0.125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0.25, 0, 0, 0.5, 0, 0, 0.25, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0.125, 0.25, 0.125, 0, 0, 0,
    0, 0, 0, 0.125, 0.25, 0.125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0.25, 0.25, 0, 0, 0, 0, 0, 0, 0, 0.25, 0.25, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0 }, { 0, 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0.0625, 0.125, 0.0625, 0.0625,
        0.125, 0.0625, 0, 0, 0, 0.0625, 0.125, 0.0625, 0.0625, 0.125, 0.0625, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0.125, 0.125, 0, 0.125, 0.125,
        0, 0, 0, 0, 0.125, 0.125, 0, 0.125, 0.125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0 }, { 0, 0, 0.25, 0, 0, 0.25, 0, 0, 0, 0, 0, 0.25, 0, 0, 0.25, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0.03125, 0.0625, 0.03125, 0.0625,
        0.125, 0.0625, 0.03125, 0.0625, 0.03125, 0.03125, 0.0625, 0.03125,
        0.0625, 0.125, 0.0625, 0.03125, 0.0625, 0.03125, 0, 0, 0, 0, 0, 0, 0, 0,
        0 }, { 0, 0.0625, 0.0625, 0, 0.125, 0.125, 0, 0.0625, 0.0625, 0, 0.0625,
        0.0625, 0, 0.125, 0.125, 0, 0.0625, 0.0625, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0.125, 0, 0, 0.25, 0, 0, 0.125, 0, 0, 0.125, 0, 0, 0.25, 0, 0,
        0.125, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0.0625, 0.125, 0.0625, 0, 0, 0, 0,
        0, 0, 0.125, 0.25, 0.125, 0, 0, 0, 0, 0, 0, 0.0625, 0.125, 0.0625, 0, 0,
        0, 0, 0, 0 }, { 0, 0.125, 0.125, 0, 0, 0, 0, 0, 0, 0, 0.25, 0.25, 0, 0,
        0, 0, 0, 0, 0, 0.125, 0.125, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0.25, 0, 0, 0,
        0, 0, 0, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0.25, 0, 0, 0, 0, 0, 0 }, {
        0.03125, 0.0625, 0.03125, 0.03125, 0.0625, 0.03125, 0, 0, 0, 0.0625,
        0.125, 0.0625, 0.0625, 0.125, 0.0625, 0, 0, 0, 0.03125, 0.0625, 0.03125,
        0.03125, 0.0625, 0.03125, 0, 0, 0 }, { 0, 0.0625, 0.0625, 0, 0.0625,
        0.0625, 0, 0, 0, 0, 0.125, 0.125, 0, 0.125, 0.125, 0, 0, 0, 0, 0.0625,
        0.0625, 0, 0.0625, 0.0625, 0, 0, 0 }, { 0, 0, 0.125, 0, 0, 0.125, 0, 0,
        0, 0, 0, 0.25, 0, 0, 0.25, 0, 0, 0, 0, 0, 0.125, 0, 0, 0.125, 0, 0, 0 },
    { 0.015625, 0.03125, 0.015625, 0.03125, 0.0625, 0.03125, 0.015625, 0.03125,
        0.015625, 0.03125, 0.0625, 0.03125, 0.0625, 0.125, 0.0625, 0.03125,
        0.0625, 0.03125, 0.015625, 0.03125, 0.015625, 0.03125, 0.0625, 0.03125,
        0.015625, 0.03125, 0.015625 }, { 0, 0.03125, 0.03125, 0, 0.0625, 0.0625,
        0, 0.03125, 0.03125, 0, 0.0625, 0.0625, 0, 0.125, 0.125, 0, 0.0625,
        0.0625, 0, 0.03125, 0.03125, 0, 0.0625, 0.0625, 0, 0.03125, 0.03125 }, {
        0, 0, 0.0625, 0, 0, 0.125, 0, 0, 0.0625, 0, 0, 0.125, 0, 0, 0.25, 0, 0,
        0.125, 0, 0, 0.0625, 0, 0, 0.125, 0, 0, 0.0625 } },

{ { 0.0625, 0, 0, 0.125, 0, 0, 0.0625, 0, 0, 0.125, 0, 0, 0.25, 0, 0, 0.125, 0,
    0, 0.0625, 0, 0, 0.125, 0, 0, 0.0625, 0, 0 }, { 0.03125, 0.03125, 0, 0.0625,
    0.0625, 0, 0.03125, 0.03125, 0, 0.0625, 0.0625, 0, 0.125, 0.125, 0, 0.0625,
    0.0625, 0, 0.03125, 0.03125, 0, 0.0625, 0.0625, 0, 0.03125, 0.03125, 0 }, {
    0.015625, 0.03125, 0.015625, 0.03125, 0.0625, 0.03125, 0.015625, 0.03125,
    0.015625, 0.03125, 0.0625, 0.03125, 0.0625, 0.125, 0.0625, 0.03125, 0.0625,
    0.03125, 0.015625, 0.03125, 0.015625, 0.03125, 0.0625, 0.03125, 0.015625,
    0.03125, 0.015625 }, { 0, 0, 0, 0.125, 0, 0, 0.125, 0, 0, 0, 0, 0, 0.25, 0,
    0, 0.25, 0, 0, 0, 0, 0, 0.125, 0, 0, 0.125, 0, 0 }, { 0, 0, 0, 0.0625,
    0.0625, 0, 0.0625, 0.0625, 0, 0, 0, 0, 0.125, 0.125, 0, 0.125, 0.125, 0, 0,
    0, 0, 0.0625, 0.0625, 0, 0.0625, 0.0625, 0 },
    { 0, 0, 0, 0.03125, 0.0625, 0.03125, 0.03125, 0.0625, 0.03125, 0, 0, 0,
        0.0625, 0.125, 0.0625, 0.0625, 0.125, 0.0625, 0, 0, 0, 0.03125, 0.0625,
        0.03125, 0.03125, 0.0625, 0.03125 }, { 0, 0, 0, 0, 0, 0, 0.25, 0, 0, 0,
        0, 0, 0, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0.25, 0, 0 }, { 0, 0, 0, 0,
        0, 0, 0.125, 0.125, 0, 0, 0, 0, 0, 0, 0, 0.25, 0.25, 0, 0, 0, 0, 0, 0,
        0, 0.125, 0.125, 0 },
    { 0, 0, 0, 0, 0, 0, 0.0625, 0.125, 0.0625, 0, 0, 0, 0, 0, 0, 0.125, 0.25,
        0.125, 0, 0, 0, 0, 0, 0, 0.0625, 0.125, 0.0625 }, { 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0.125, 0, 0, 0.25, 0, 0, 0.125, 0, 0, 0.125, 0, 0, 0.25, 0, 0,
        0.125, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0625, 0.0625, 0, 0.125,
        0.125, 0, 0.0625, 0.0625, 0, 0.0625, 0.0625, 0, 0.125, 0.125, 0, 0.0625,
        0.0625, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.03125, 0.0625, 0.03125,
        0.0625, 0.125, 0.0625, 0.03125, 0.0625, 0.03125, 0.03125, 0.0625,
        0.03125, 0.0625, 0.125, 0.0625, 0.03125, 0.0625, 0.03125 }, { 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0.25, 0, 0, 0.25, 0, 0, 0, 0, 0, 0.25, 0, 0,
        0.25, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.125, 0.125, 0,
        0.125, 0.125, 0, 0, 0, 0, 0.125, 0.125, 0, 0.125, 0.125, 0 }, { 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0625, 0.125, 0.0625, 0.0625, 0.125, 0.0625,
        0, 0, 0, 0.0625, 0.125, 0.0625, 0.0625, 0.125, 0.0625 },
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0,
        0.5, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.25, 0.25,
        0, 0, 0, 0, 0, 0, 0, 0.25, 0.25, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0.125, 0.25, 0.125, 0, 0, 0, 0, 0, 0, 0.125, 0.25, 0.125 },
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.25, 0, 0, 0.5, 0,
        0, 0.25, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0.125, 0.125, 0, 0.25, 0.25, 0, 0.125, 0.125, 0 }, { 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0625, 0.125, 0.0625, 0.125, 0.25,
        0.125, 0.0625, 0.125, 0.0625 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0, 0, 0.5, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.25, 0.25,
        0, 0.25, 0.25, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0.125, 0.25, 0.125, 0.125, 0.25, 0.125 }, { 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 }, { 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0.5, 0.5, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0.25, 0.5, 0.25 } },

{ { 0.0625, 0.125, 0.0625, 0, 0, 0, 0, 0, 0, 0.125, 0.25, 0.125, 0, 0, 0, 0, 0,
    0, 0.0625, 0.125, 0.0625, 0, 0, 0, 0, 0, 0 }, { 0, 0.125, 0.125, 0, 0, 0, 0,
    0, 0, 0, 0.25, 0.25, 0, 0, 0, 0, 0, 0, 0, 0.125, 0.125, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0.25, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0.25, 0,
        0, 0, 0, 0, 0 }, { 0.03125, 0.0625, 0.03125, 0.03125, 0.0625, 0.03125,
        0, 0, 0, 0.0625, 0.125, 0.0625, 0.0625, 0.125, 0.0625, 0, 0, 0, 0.03125,
        0.0625, 0.03125, 0.03125, 0.0625, 0.03125, 0, 0, 0 }, { 0, 0.0625,
        0.0625, 0, 0.0625, 0.0625, 0, 0, 0, 0, 0.125, 0.125, 0, 0.125, 0.125, 0,
        0, 0, 0, 0.0625, 0.0625, 0, 0.0625, 0.0625, 0, 0, 0 }, { 0, 0, 0.125, 0,
        0, 0.125, 0, 0, 0, 0, 0, 0.25, 0, 0, 0.25, 0, 0, 0, 0, 0, 0.125, 0, 0,
        0.125, 0, 0, 0 }, { 0.015625, 0.03125, 0.015625, 0.03125, 0.0625,
        0.03125, 0.015625, 0.03125, 0.015625, 0.03125, 0.0625, 0.03125, 0.0625,
        0.125, 0.0625, 0.03125, 0.0625, 0.03125, 0.015625, 0.03125, 0.015625,
        0.03125, 0.0625, 0.03125, 0.015625, 0.03125, 0.015625 }, { 0, 0.03125,
        0.03125, 0, 0.0625, 0.0625, 0, 0.03125, 0.03125, 0, 0.0625, 0.0625, 0,
        0.125, 0.125, 0, 0.0625, 0.0625, 0, 0.03125, 0.03125, 0, 0.0625, 0.0625,
        0, 0.03125, 0.03125 },
    { 0, 0, 0.0625, 0, 0, 0.125, 0, 0, 0.0625, 0, 0, 0.125, 0, 0, 0.25, 0, 0,
        0.125, 0, 0, 0.0625, 0, 0, 0.125, 0, 0, 0.0625 }, { 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0.125, 0.25, 0.125, 0, 0, 0, 0, 0, 0, 0.125, 0.25, 0.125, 0, 0, 0,
        0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.25, 0.25, 0, 0, 0, 0, 0, 0,
        0, 0.25, 0.25, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0.0625, 0.125, 0.0625, 0.0625, 0.125, 0.0625, 0, 0, 0,
        0.0625, 0.125, 0.0625, 0.0625, 0.125, 0.0625, 0, 0, 0 }, { 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0.125, 0.125, 0, 0.125, 0.125, 0, 0, 0, 0, 0.125,
        0.125, 0, 0.125, 0.125, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0.25, 0, 0, 0.25, 0, 0, 0, 0, 0, 0.25, 0, 0, 0.25, 0, 0, 0 }, { 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0.03125, 0.0625, 0.03125, 0.0625, 0.125, 0.0625,
        0.03125, 0.0625, 0.03125, 0.03125, 0.0625, 0.03125, 0.0625, 0.125,
        0.0625, 0.03125, 0.0625, 0.03125 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0.0625, 0.0625, 0, 0.125, 0.125, 0, 0.0625, 0.0625, 0, 0.0625, 0.0625,
        0, 0.125, 0.125, 0, 0.0625, 0.0625 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0.125, 0, 0, 0.25, 0, 0, 0.125, 0, 0, 0.125, 0, 0, 0.25, 0, 0, 0.125 },
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.25, 0.5, 0.25, 0,
        0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0.5, 0.5, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.125, 0.25, 0.125, 0.125, 0.25, 0.125, 0,
        0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.25,
        0.25, 0, 0.25, 0.25, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0.5, 0, 0, 0.5, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0625, 0.125, 0.0625, 0.125, 0.25,
        0.125, 0.0625, 0.125, 0.0625 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0.125, 0.125, 0, 0.25, 0.25, 0, 0.125, 0.125 }, { 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.25, 0, 0,
        0.5, 0, 0, 0.25 } },

{ { 0.0625, 0.125, 0.0625, 0.125, 0.25, 0.125, 0.0625, 0.125, 0.0625, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0.125, 0.125, 0, 0.25, 0.25, 0, 0.125, 0.125, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0.25, 0, 0, 0.5, 0, 0, 0.25, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0.125,
        0.25, 0.125, 0.125, 0.25, 0.125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0.25, 0.25, 0, 0.25, 0.25, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0.5, 0, 0,
        0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0,
        0, 0, 0, 0.25, 0.5, 0.25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0.03125, 0.0625, 0.03125,
        0.0625, 0.125, 0.0625, 0.03125, 0.0625, 0.03125, 0.03125, 0.0625,
        0.03125, 0.0625, 0.125, 0.0625, 0.03125, 0.0625, 0.03125, 0, 0, 0, 0, 0,
        0, 0, 0, 0 }, { 0, 0.0625, 0.0625, 0, 0.125, 0.125, 0, 0.0625, 0.0625,
        0, 0.0625, 0.0625, 0, 0.125, 0.125, 0, 0.0625, 0.0625, 0, 0, 0, 0, 0, 0,
        0, 0, 0 }, { 0, 0, 0.125, 0, 0, 0.25, 0, 0, 0.125, 0, 0, 0.125, 0, 0,
        0.25, 0, 0, 0.125, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0.0625,
        0.125, 0.0625, 0.0625, 0.125, 0.0625, 0, 0, 0, 0.0625, 0.125, 0.0625,
        0.0625, 0.125, 0.0625, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0.125,
        0.125, 0, 0.125, 0.125, 0, 0, 0, 0, 0.125, 0.125, 0, 0.125, 0.125, 0, 0,
        0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0.25, 0, 0, 0.25, 0, 0, 0, 0, 0,
        0.25, 0, 0, 0.25, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0,
        0.125, 0.25, 0.125, 0, 0, 0, 0, 0, 0, 0.125, 0.25, 0.125, 0, 0, 0, 0, 0,
        0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0.25, 0.25, 0, 0, 0, 0, 0, 0, 0,
        0.25, 0.25, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0.5,
        0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0.015625,
        0.03125, 0.015625, 0.03125, 0.0625, 0.03125, 0.015625, 0.03125,
        0.015625, 0.03125, 0.0625, 0.03125, 0.0625, 0.125, 0.0625, 0.03125,
        0.0625, 0.03125, 0.015625, 0.03125, 0.015625, 0.03125, 0.0625, 0.03125,
        0.015625, 0.03125, 0.015625 }, { 0, 0.03125, 0.03125, 0, 0.0625, 0.0625,
        0, 0.03125, 0.03125, 0, 0.0625, 0.0625, 0, 0.125, 0.125, 0, 0.0625,
        0.0625, 0, 0.03125, 0.03125, 0, 0.0625, 0.0625, 0, 0.03125, 0.03125 }, {
        0, 0, 0.0625, 0, 0, 0.125, 0, 0, 0.0625, 0, 0, 0.125, 0, 0, 0.25, 0, 0,
        0.125, 0, 0, 0.0625, 0, 0, 0.125, 0, 0, 0.0625 }, { 0, 0, 0, 0.03125,
        0.0625, 0.03125, 0.03125, 0.0625, 0.03125, 0, 0, 0, 0.0625, 0.125,
        0.0625, 0.0625, 0.125, 0.0625, 0, 0, 0, 0.03125, 0.0625, 0.03125,
        0.03125, 0.0625, 0.03125 }, { 0, 0, 0, 0, 0.0625, 0.0625, 0, 0.0625,
        0.0625, 0, 0, 0, 0, 0.125, 0.125, 0, 0.125, 0.125, 0, 0, 0, 0, 0.0625,
        0.0625, 0, 0.0625, 0.0625 }, { 0, 0, 0, 0, 0, 0.125, 0, 0, 0.125, 0, 0,
        0, 0, 0, 0.25, 0, 0, 0.25, 0, 0, 0, 0, 0, 0.125, 0, 0, 0.125 }, { 0, 0,
        0, 0, 0, 0, 0.0625, 0.125, 0.0625, 0, 0, 0, 0, 0, 0, 0.125, 0.25, 0.125,
        0, 0, 0, 0, 0, 0, 0.0625, 0.125, 0.0625 }, { 0, 0, 0, 0, 0, 0, 0, 0.125,
        0.125, 0, 0, 0, 0, 0, 0, 0, 0.25, 0.25, 0, 0, 0, 0, 0, 0, 0, 0.125,
        0.125 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0.25, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0,
        0, 0, 0, 0, 0, 0, 0, 0.25 } },

{ { 0.015625, 0.03125, 0.015625, 0.03125, 0.0625, 0.03125, 0.015625, 0.03125,
    0.015625, 0.03125, 0.0625, 0.03125, 0.0625, 0.125, 0.0625, 0.03125, 0.0625,
    0.03125, 0.015625, 0.03125, 0.015625, 0.03125, 0.0625, 0.03125, 0.015625,
    0.03125, 0.015625 }, { 0, 0.03125, 0.03125, 0, 0.0625, 0.0625, 0, 0.03125,
    0.03125, 0, 0.0625, 0.0625, 0, 0.125, 0.125, 0, 0.0625, 0.0625, 0, 0.03125,
    0.03125, 0, 0.0625, 0.0625, 0, 0.03125, 0.03125 }, { 0, 0, 0.0625, 0, 0,
    0.125, 0, 0, 0.0625, 0, 0, 0.125, 0, 0, 0.25, 0, 0, 0.125, 0, 0, 0.0625, 0,
    0, 0.125, 0, 0, 0.0625 }, { 0, 0, 0, 0.03125, 0.0625, 0.03125, 0.03125,
    0.0625, 0.03125, 0, 0, 0, 0.0625, 0.125, 0.0625, 0.0625, 0.125, 0.0625, 0,
    0, 0, 0.03125, 0.0625, 0.03125, 0.03125, 0.0625, 0.03125 }, { 0, 0, 0, 0,
    0.0625, 0.0625, 0, 0.0625, 0.0625, 0, 0, 0, 0, 0.125, 0.125, 0, 0.125,
    0.125, 0, 0, 0, 0, 0.0625, 0.0625, 0, 0.0625, 0.0625 }, { 0, 0, 0, 0, 0,
    0.125, 0, 0, 0.125, 0, 0, 0, 0, 0, 0.25, 0, 0, 0.25, 0, 0, 0, 0, 0, 0.125,
    0, 0, 0.125 }, { 0, 0, 0, 0, 0, 0, 0.0625, 0.125, 0.0625, 0, 0, 0, 0, 0, 0,
    0.125, 0.25, 0.125, 0, 0, 0, 0, 0, 0, 0.0625, 0.125, 0.0625 }, { 0, 0, 0, 0,
    0, 0, 0, 0.125, 0.125, 0, 0, 0, 0, 0, 0, 0, 0.25, 0.25, 0, 0, 0, 0, 0, 0, 0,
    0.125, 0.125 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0.25, 0, 0, 0, 0, 0, 0, 0, 0, 0.5,
    0, 0, 0, 0, 0, 0, 0, 0, 0.25 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.03125,
    0.0625, 0.03125, 0.0625, 0.125, 0.0625, 0.03125, 0.0625, 0.03125, 0.03125,
    0.0625, 0.03125, 0.0625, 0.125, 0.0625, 0.03125, 0.0625, 0.03125 }, { 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0.0625, 0.0625, 0, 0.125, 0.125, 0, 0.0625, 0.0625,
    0, 0.0625, 0.0625, 0, 0.125, 0.125, 0, 0.0625, 0.0625 }, { 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0.125, 0, 0, 0.25, 0, 0, 0.125, 0, 0, 0.125, 0, 0, 0.25, 0,
    0, 0.125 },
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0625, 0.125, 0.0625, 0.0625, 0.125,
        0.0625, 0, 0, 0, 0.0625, 0.125, 0.0625, 0.0625, 0.125, 0.0625 }, { 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.125, 0.125, 0, 0.125, 0.125, 0, 0, 0,
        0, 0.125, 0.125, 0, 0.125, 0.125 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0.25, 0, 0, 0.25, 0, 0, 0, 0, 0, 0.25, 0, 0, 0.25 }, { 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.125, 0.25, 0.125, 0, 0, 0, 0, 0,
        0, 0.125, 0.25, 0.125 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0.25, 0.25, 0, 0, 0, 0, 0, 0, 0, 0.25, 0.25 }, { 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0.5 }, { 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0625, 0.125,
        0.0625, 0.125, 0.25, 0.125, 0.0625, 0.125, 0.0625 }, { 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.125, 0.125, 0, 0.25, 0.25, 0,
        0.125, 0.125 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0.25, 0, 0, 0.5, 0, 0, 0.25 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.125, 0.25, 0.125, 0.125, 0.25, 0.125 },
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.25,
        0.25, 0, 0.25, 0.25 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0.5, 0, 0, 0.5 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.25, 0.5, 0.25 }, { 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.5,
        0.5 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1 } }

};

#define MIN_JAC 7.0e-15

static bool isBernsteinPositive(double m[27], int profondeur) {
  int corners[8] = { 0, 2, 6, 8, 18, 20, 24, 26 };

  double n[27];
  int i, j;

  for (i = 0; i < 8; i++)
    if (m[corners[i]] <= MIN_JAC)
      return false;

  bool allpositive = true;

  for (j = 0; j < 26; j++) {
    if (m[j] <= MIN_JAC) {
      allpositive = false;
      break;
    }
  }

  if (allpositive)
    return true;

  if (profondeur == 20)
    return false;

  for (int mat = 0; mat < 8; mat++) {

    for (i = 0; i < 27; i++) {
      n[i] = 0.0;
      for (j = 0; j < 27; j++) {
	n[i] = n[i] + sub_matrices[mat][i][j] * m[j];
      }
    }

    if (!isBernsteinPositive(n, profondeur + 1))
      return false;
  }
  return true;
}
inline double maxDouble(double a, double b) {
  return std::max(a, b);
}

inline double minDouble(double a, double b) {
  return std::min(a, b);
}

// Normalize Hexaedre

static bool normalize(Vecteur * n) {
  double x_min, x_max, y_min, y_max, z_min, z_max;
  x_min = x_max = n[0].x();
  y_min = y_max = n[0].y();
  z_min = z_max = n[0].z();

  for (int i = 1; i < 8; i++) {
    double x = n[i].x();
    double y = n[i].y();
    double z = n[i].z();
    x_min = minDouble(x, x_min);
    x_max = maxDouble(x, x_max);
    y_min = minDouble(y, y_min);
    y_max = maxDouble(y, y_max);
    z_min = minDouble(z, z_min);
    z_max = maxDouble(z, z_max);
  }
  if (z_min == z_max || x_min == x_max || y_min == y_max)
    return false;

  double coefx = 1.0 / (x_max - x_min);
  double coefy = 1.0 / (y_max - y_min);
  double coefz = 1.0 / (z_max - z_min);
  for (int i = 0; i < 8; i++) {
    double x = (n[i].x() - x_min) * coefx;
    double y = (n[i].y() - y_min) * coefy;
    double z = (n[i].z() - z_min) * coefz;
    n[i] = Vecteur(x, y, z);
  }

  return true;

}

inline double mixteMul(Vecteur & a, Vecteur &b, Vecteur & c) {
  return a * (b ^ c);
}

static bool compute27Jacobian(const Hexaedre * p_h, double * jac) {
  for (int i = 0; i < 27; i++)
    jac[i] = 0;

  double val[3] = { 0.0, 0.5, 1.0 };

  Vecteur n[8];
  for (int i = 0; i < 8; i++)
    n[i] = p_h->Sommet(i);

  if (!normalize(n))
    return false;

  Vecteur dfa[9], dfb[9], dfc[9];

  dfa[0] = n[1] - n[0]; // b=0, c=0
  dfa[2] = n[2] - n[3]; // b=1, c=0
  dfa[6] = n[5] - n[4]; // b=0, c=1
  dfa[8] = n[6] - n[7]; // b=1, c=1

  dfa[1] = (dfa[0] + dfa[2]) * 0.5; // b=0.5 c=0
  dfa[3] = (dfa[0] + dfa[6]) * 0.5; //
  dfa[5] = (dfa[2] + dfa[8]) * 0.5;
  dfa[7] = (dfa[6] + dfa[8]) * 0.5;

  dfa[4] = (dfa[1] + dfa[7]) * 0.5;

  dfb[0] = n[3] - n[0];
  dfb[2] = n[2] - n[1];
  dfb[6] = n[7] - n[4];
  dfb[8] = n[6] - n[5];

  dfb[1] = (dfb[0] + dfb[2]) * 0.5;
  dfb[3] = (dfb[0] + dfb[6]) * 0.5;
  dfb[5] = (dfb[2] + dfb[8]) * 0.5;
  dfb[7] = (dfb[6] + dfb[8]) * 0.5;

  dfb[4] = (dfb[1] + dfb[7]) * 0.5;

  dfc[0] = n[4] - n[0];
  dfc[2] = n[5] - n[1];
  dfc[6] = n[7] - n[3];
  dfc[8] = n[6] - n[2];

  dfc[1] = (dfc[0] + dfc[2]) * 0.5;
  dfc[3] = (dfc[0] + dfc[6]) * 0.5;
  dfc[5] = (dfc[2] + dfc[8]) * 0.5;
  dfc[7] = (dfc[6] + dfc[8]) * 0.5;

  dfc[4] = (dfc[1] + dfc[7]) * 0.5;

  bool all_positives = true;
  jac[0] = mixteMul(dfa[0], dfb[0], dfc[0]);
  jac[1] = mixteMul(dfa[3], dfb[3], dfc[0]);
  jac[2] = mixteMul(dfa[6], dfb[6], dfc[0]);
  jac[3] = mixteMul(dfa[1], dfb[0], dfc[3]);
  jac[4] = mixteMul(dfa[4], dfb[3], dfc[3]);
  jac[5] = mixteMul(dfa[7], dfb[6], dfc[3]);
  jac[6] = mixteMul(dfa[2], dfb[0], dfc[6]);
  jac[7] = mixteMul(dfa[5], dfb[3], dfc[6]);
  jac[8] = mixteMul(dfa[8], dfb[6], dfc[6]);
  jac[9] = mixteMul(dfa[0], dfb[1], dfc[1]);
  jac[10] = mixteMul(dfa[3], dfb[4], dfc[1]);
  jac[11] = mixteMul(dfa[6], dfb[7], dfc[1]);
  jac[12] = mixteMul(dfa[1], dfb[1], dfc[4]);
  jac[13] = mixteMul(dfa[4], dfb[4], dfc[4]);
  jac[14] = mixteMul(dfa[7], dfb[7], dfc[4]);
  jac[15] = mixteMul(dfa[2], dfb[1], dfc[7]);
  jac[16] = mixteMul(dfa[5], dfb[4], dfc[7]);
  jac[17] = mixteMul(dfa[8], dfb[7], dfc[7]);
  jac[18] = mixteMul(dfa[0], dfb[2], dfc[2]);
  jac[19] = mixteMul(dfa[3], dfb[5], dfc[2]);
  jac[20] = mixteMul(dfa[6], dfb[8], dfc[2]);
  jac[21] = mixteMul(dfa[1], dfb[2], dfc[5]);
  jac[22] = mixteMul(dfa[4], dfb[5], dfc[5]);
  jac[23] = mixteMul(dfa[7], dfb[8], dfc[5]);
  jac[24] = mixteMul(dfa[2], dfb[2], dfc[8]);
  jac[25] = mixteMul(dfa[5], dfb[5], dfc[8]);
  jac[26] = mixteMul(dfa[8], dfb[8], dfc[8]);

  for (int i = 0; i < 27; i++)
    if (jac[i] <= MIN_JAC)
      return false;

  return true;

}

double Hexaedre::Validity() {

  double jac[27];
  double m[27];

  double val[3] = { 0.0, 0.5, 1.0 };

  bool all_positives = compute27Jacobian(this, jac);

  // If one of the jacobian is negative or zero, it is not a valid hex !

  if (!all_positives) {
    return false;
  }

  m[0] = jac[0];
  m[1] = -jac[0] * 0.5 + 2. * jac[1] - jac[2] * 0.5;
  m[2] = jac[2];
  m[3] = -jac[0] * 0.5 + 2. * jac[3] - jac[6] * 0.5;
  m[4] = jac[0] * 0.25 - jac[1] + jac[2] * 0.25 - jac[3] + 4. * jac[4] - jac[5]
      + jac[6] * 0.25 - jac[7] + jac[8] * 0.25;
  m[5] = -jac[2] * 0.5 + 2. * jac[5] - jac[8] * 0.5;
  m[6] = jac[6];
  m[7] = -jac[6] * 0.5 + 2. * jac[7] - jac[8] * 0.5;
  m[8] = jac[8];
  m[9] = -jac[0] * 0.5 + 2. * jac[9] - jac[18] * 0.5;
  m[10] = jac[0] * 0.25 - jac[1] + jac[2] * 0.25 - jac[9] + 4. * jac[10]
      - jac[11] + jac[18] * 0.25 - jac[19] + jac[20] * 0.25;

  m[11] = -jac[2] * 0.5 + 2. * jac[11] - jac[20] * 0.5;
  m[12] = jac[0] * 0.25 - jac[3] + jac[6] * 0.25 - jac[9] + 4. * jac[12]
      - jac[15] + jac[18] * 0.25 - jac[21] + jac[24] * 0.25;

  m[13] = -jac[0] * 0.125 + jac[1] * 0.5 - jac[2] * 0.125 + jac[3] * 0.5
      - 2. * jac[4] + jac[5] * 0.5 - jac[6] * 0.125 + jac[7] * 0.5
      - jac[8] * 0.125 + jac[9] * 0.5 - 2. * jac[10] + jac[11] * 0.5
      - 2. * jac[12] + 8 * jac[13] - 2. * jac[14] + jac[15] * 0.5 - 2. * jac[16]
      + jac[17] * 0.5 - jac[18] * 0.125 + jac[19] * 0.5 - jac[20] * 0.125
      + jac[21] * 0.5 - 2. * jac[22] + jac[23] * 0.5 - jac[24] * 0.125
      + jac[25] * 0.5 - jac[26] * 0.125;

  m[14] = jac[2] * 0.25 - jac[5] + jac[8] * 0.25 - jac[11] + 4. * jac[14]
      - jac[17] + jac[20] * 0.25 - jac[23] + jac[26] * 0.25;

  m[15] = -jac[6] * 0.5 + 2. * jac[15] - jac[24] * 0.5;
  m[16] = jac[6] * 0.25 - jac[7] + jac[8] * 0.25 - jac[15] + 4. * jac[16]
      - jac[17] + jac[24] * 0.25 - jac[25] + jac[26] * 0.25;
  m[17] = -jac[8] * 0.5 + 2. * jac[17] - jac[26] * 0.5;

  m[18] = jac[18];
  m[19] = -jac[18] * 0.5 + 2. * jac[19] - jac[20] * 0.5;
  m[20] = jac[20];

  m[21] = -jac[18] * 0.5 + 2. * jac[21] - jac[24] * 0.5;
  m[22] = jac[18] * 0.25 - jac[19] + jac[20] * 0.25 - jac[21] + 4. * jac[22]
      - jac[23] + jac[24] * 0.25 - jac[25] + jac[26] * 0.25;

  m[23] = -jac[20] * 0.5 + 2. * jac[23] - jac[26] * 0.5;
  m[24] = jac[24];
  m[25] = -jac[24] * 0.5 + 2. * jac[25] - jac[26] * 0.5;
  m[26] = jac[26];

  return isBernsteinPositive(m, 0);
}

}
